#!/bin/bash

#                  _
#                /   \
#               |  o  |
#                \   /
#         ________) (________
#        |                   |
#        '------.     .------'
#                |   |
#                |   |
#     /\         |   |         /\
#    /_ \        /   \        / _\
#      \ '.    .'     '.    .' /
#       \  '--'         '--'  /
#        '.                 .'
#          '._           _.'
#             `'-.   .-'`
#                 \ /
#                  `
# Defines the active versions of apps, plugins (etc) as environment variables that are
# later used by wrappers inside ulauncher. The variables get defined by the convention
# $UVER_<NAME>_VERSION. They are declared using json files which can be localized
# under the "../versions" folder (the json structure is basically an one dimension object).
# Any json file created under ../versions is going to be used automatically.

# getting current script folder
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# avoiding to prepended to the system path for every single bash session by making
# sure bin is not included to the path yet.
uverBinPath+="$dir/bin"
if ! [ "$UVER_BIN_PATH" == "$uverBinPath" ]; then
  export UVER_BIN_PATH=$uverBinPath
  export PATH="$uverBinPath:$PATH"
fi

# prepending uver module to the python path
uverLib="$dir/lib"
if [ -z "$PYTHONPATH" ]; then
  export PYTHONPATH="$uverLib"
else
  export PYTHONPATH="$uverLib:$PYTHONPATH"
fi

# making sure $UVER_VERSIONS_DIR is defined properly
if ! [ -d "$UVER_VERSIONS_DIR" ]; then
  echo "uver error: Could not find directory defined by \$UVER_VERSIONS_DIR" >&2
else
  coreVersions="$UVER_VERSIONS_DIR"

  # setting versions as environment variables
  for coreVersionType in $coreVersions; do
      while IFS='=' read -r name version || [[ -n "$name" ]];
      do
        # convention followed by <UVER_NAME_VERSION>=<VERSION>
        export "$name"=$version
      done < <(uvervars $coreVersionType)
  done
fi
